name: "Python"

on:
  push:
    branches:
     - master
  release:
    types:
      - published

jobs:
  tests:
    name: Run tests on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build and install
        run: pip install --verbose .[tests]
      - name: Run tests with pytest
        run: pytest

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: ./dist/*.tar.gz

  build-wheels:
    name: Build wheels on ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-24.04 # using manylinux/musllinux images
          - os: ubuntu-24.04-arm # using manylinux/musllinux images
          - os: windows-latest
          - os: macos-15
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        env:
          # <filesystem> requires 10.15: https://developer.apple.com/xcode/cpp/
          # https://cibuildwheel.pypa.io/en/stable/cpp_standards/#macos-and-deployment-target-versions
          MACOSX_DEPLOYMENT_TARGET: "10.15"
          CIBW_ARCHS_MACOS: "x86_64 arm64" # https://cibuildwheel.pypa.io/en/stable/faq/#cross-compiling
        uses: pypa/cibuildwheel@v2.23.0
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.config.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  publish:
    needs: [tests, build-sdist, build-wheels]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks builds artifacts into dist/
          pattern: dist-*
          path: dist
          merge-multiple: true
      - name: Publish package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
      - name: Publish package to PyPI
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@release/v1
