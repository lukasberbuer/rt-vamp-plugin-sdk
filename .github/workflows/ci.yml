name: CI

on: push

jobs:
  test:
    name: ${{ matrix.config.name }} (${{ matrix.build_type }}, ${{ matrix.library_type }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Linux GCC 10
            os: ubuntu-22.04
            compiler: g++-10

          - name: Linux GCC 14
            os: ubuntu-24.04
            compiler: g++-14

          - name: Linux Clang 13
            os: ubuntu-22.04
            compiler: clang++-13

          - name: Linux Clang 18
            os: ubuntu-24.04
            compiler: clang++-18

          - name: macOS AppleClang 15
            os: macos-13
            compiler: clang++

          - name: macOS AppleClang 16
            os: macos-15
            compiler: clang++

          - name: Windows Visual Studio 17
            os: windows-2022
            compiler: msvc

          - name: ASan
            os: ubuntu-24.04
            compiler: clang++
            flags: "-DRTVAMP_ENABLE_SANITIZER_ADDRESS=ON"

          - name: TSan
            os: ubuntu-24.04
            compiler: clang++
            flags: "-DRTVAMP_ENABLE_SANITIZER_THREAD=ON"

          - name: UBSan
            os: ubuntu-24.04
            compiler: clang++
            flags: "-DRTVAMP_ENABLE_SANITIZER_UNDEFINED_BEHAVIOR=ON"

        build_type:
          - Debug
          - Release

        library_type:
          - static
          - shared

        include:
          - config:
              name: Clang-Tidy
              os: ubuntu-24.04
              compiler: clang++
              flags: "-DOPENAE_ENABLE_CLANG_TIDY=ON"
            build_type: Debug
            library_type: static

    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install requirements
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y catch2 libbenchmark-dev libsndfile1-dev vamp-plugin-sdk
          pip install cpp-coveralls quom

      - name: Configure CMake
        run: >
          cmake -S . -B build
          -DCMAKE_CXX_COMPILER=${{ matrix.config.compiler }}
          -DCMAKE_CXX_STANDARD=20
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DBUILD_SHARED_LIBS=${{ matrix.library_type == 'shared' }}
          -DRTVAMP_BUILD_BENCHMARKS=${{ runner.os == 'Linux' }}
          -DRTVAMP_BUILD_EXAMPLES=ON
          -DRTVAMP_BUILD_TESTS=ON
          ${{ matrix.config.flags }}

      - name: Build and run tests
        run: cmake --build build --config ${{ matrix.build_type }} --parallel

      # - name: Run tests
      #   run: ctest --test-dir build --build-config ${{ matrix.build_type }} --output-on-failure
